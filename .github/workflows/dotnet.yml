# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Generate SSH Key
        run: |
          ssh-keygen -t rsa -b 4096 -C "github-actions@plesk" -f /tmp/id_rsa -N ""
          echo "SSH_PRIVATE_KEY_START"
          cat /tmp/id_rsa
          echo "SSH_PRIVATE_KEY_END"
          echo "SSH_PUBLIC_KEY_START"
          cat /tmp/id_rsa.pub
          echo "SSH_PUBLIC_KEY_END"
          id: ssh-key

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
         ssh-private-key: ${{ secrets.MY_KEY }}

      - name: Setup Git Client
        run: |
          ssh-keyscan -H github.com >> ~/.ssh/known_hosts
          git config --global user.email "thanhtuk9acntt@hotmail.com"
          git config --global user.name "GitHub Actions"

      - name: Checkout
        uses: actions/checkout@v4

       
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
      
        with:
         dotnet-version: 8.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet publish --configuration Release
     # Clone this repository (deploy branch) inside the "deploy" folder
            # Before clearing out, move .git folder out of the "deploy" folder
            # Recreate deploy folder, empty
            # Move .git folder back again
            # Move publish to deploy folder
            # Push files to the "deploy" branch
      - name: Deploy
        run: |
          git clone --depth 1 --single-branch -b deploy git@github.com:${{ github.repository }}.git deploy
          mv deploy/.git deploy-.git
          rm -rf deploy
          mkdir deploy
          mv deploy-.git deploy/.git
          cd deploy
          cp -R ../bin/Release/net8.0/publish .
          git add .
          git diff --staged --quiet || git commit -m "Update Artifacts"
          git push
