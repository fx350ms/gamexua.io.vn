@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@using GameXuaVN.Web.Models.Rooms
@using Abp.Runtime.Security;

@{
    Layout = "~/views/shared/frontends/_layout.cshtml";
}

@model RoomPlayingGameModel
<h2 id="total-online"></h2>
<div style="width:100%;height:100%;max-width:100%; min-height:720px">
    <div id="game"></div>
</div>
<script>
    EJS_player = "#game";
    EJS_core = "nes";
    EJS_gameName = "@Model.Game.Name";
    EJS_color = "#0064ff";
    EJS_startOnLoaded = true;
    EJS_pathtodata = "https://cdn.emulatorjs.org/stable/data/";
    EJS_gameUrl = "@Url.Action("GetFile", "Nes", new { id = Model.Game.Id })"

    EJS_gameID = '@Model.Game.Id';

    EJS_oldCores = true;
    EJS_netplayUrl = "/gameHub";
</script>
<script src="https://cdn.emulatorjs.org/stable/data/loader.js"></script>

@* <script src="~/view-resources/views/rooms/gamehub.js"></script> *@

<script src="~/libs/signalr/dist/browser/signalr.js"></script>
<script>
    var numberOfUsers = 0;

    const userId = '@User.Identity.GetUserId()';
    const userName = '@User.Identity.Name';

    const gameHub = new signalR.HubConnectionBuilder().withUrl("/gameHub").build();

    gameHub.start().then(function () {
        console.log("Done");
    }).catch(function (err) {
        console.log(err);
    });


    gameHub.on('UserCountUpdated', function (NumberOfUsers) {
        debugger;
        $('#total-online').html(NumberOfUsers);
        numberOfUsers = NumberOfUsers;
        if (numberOfUsers == 1) {
            createRoom('1', 'Chơi contra');
        }
        else {
            joinRoom('1');
        }

    });

    gameHub.on("extra-data-updated", function (userId, extraData) {
        if (!userId) {
            console.log("Global extra data updated:", extraData);
        } else {
            console.log(`Extra data updated for user ${userId}:`, extraData);
        }
    });


    // Hàm tạo room
    function createRoom(roomId, roomName) {
        const roomData = {
            roomId: roomId,
            userId: userId,
            roomName: roomName,
            extra: {
                domain: "example.com", // Thông tin bổ sung (có thể tuỳ chỉnh)
                gameId: 6,
                roomName: roomName
            },
            password: "",
            maxParticipantsAllowed: 2,
        };


        gameHub.invoke("OpenRoom", roomData).then(function () {
            console.log("Room created successfully:", roomName);
        }).catch(function (err) {
            console.log("Error creating room:", err);
        });
    }

    function joinRoom(roomId) {
        const roomData = {
            roomId: roomId,
            userId: userId,
            sessionId: 1,
            extra: {
                domain: "example.com", // Thông tin bổ sung (có thể tuỳ chỉnh)
                gameId: 6,
            
            },
            password: "",
            maxParticipantsAllowed: 2,
        };

        gameHub.invoke("JoinRoom", roomData).then(function () {
            console.log("Joined room successfully:", roomId);
        }).catch(function (err) {
            console.log("Error joining room:", err);
        });
    }


</script>

}
