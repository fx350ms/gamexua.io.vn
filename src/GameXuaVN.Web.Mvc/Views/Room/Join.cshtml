@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@using GameXuaVN.Web.Models.Rooms
@using Abp.Runtime.Security;

@{
    Layout = "~/views/shared/frontends/_layout.cshtml";
}

@model RoomPlayingGameModel
<div class="content-wrapper">
    <div class="col-lg-9 col-md-9">
        <h2 id="total-online"></h2>
        <div style="width:100%;height:100%;max-width:100%; min-height:720px">
            <div id="game"></div>
        </div>
    </div>
</div>

<script>

    EJS_player = "#game";
    EJS_core = "nes";
    EJS_gameName = "@Model.Game.Name";
    EJS_color = "#0064ff";
    EJS_startOnLoaded = true;
    EJS_pathtodata = "https://cdn.emulatorjs.org/stable/data/";
    EJS_gameUrl = "@Url.Action("GetFile", "Nes", new { id = Model.Game.Id })"

    EJS_gameID = '@Model.Game.Id';
    EJS_oldCores = true;
    EJS_netplayUrl = "/gameHub";
</script>


<script src="https://cdn.emulatorjs.org/stable/data/loader.js"></script> 

@* <script src="~/view-resources/views/rooms/gamehub.js"></script> *@

<script src="~/libs/signalr/dist/browser/signalr.js"></script>
<script>
    var numberOfUsers = 0;
    const playerId = '@Model.PlayerId';
    const userId = '@User.Identity.GetUserId()';
    const userName = '@User.Identity.Name';
    const roomId = '@Model.Room.Id';
    // Kết nối SignalR
    const gameHub = new signalR.HubConnectionBuilder()
        .withUrl("/gameHub") // Đường dẫn tới Hub SignalR
        .build();

    // Biến lưu thông tin phòng
    let currentRoomId = null;

    // Kết nối tới SignalR Hub
    gameHub.start()
        .then(function () {
            console.log("Connected to GameHub!");
            createOrJoin();
        })
        .catch(function (err) {
            console.error("Error connecting to GameHub:", err);
        });

    // Lắng nghe sự kiện cập nhật số người dùng từ server
    gameHub.on("UserCountUpdated", function (userCount) {
        document.getElementById("total-online").innerText = `Total Online: ${userCount}`;
    });

    // Lắng nghe sự kiện người dùng tham gia phòng
    gameHub.on("user-connected", function (userId) {
        console.log(`User connected: ${userId}`);
    });

    // Lắng nghe sự kiện người dùng rời phòng
    gameHub.on("user-disconnected", function (userId) {
        console.log(`User disconnected: ${userId}`);
    });

    // Lắng nghe sự kiện cập nhật dữ liệu bổ sung
    gameHub.on("extra-data-updated", function (userId, data) {
        console.log(`Extra data updated for user ${userId}:`, data);
    });

    // Lắng nghe tin nhắn Netplay
    gameHub.on("netplay", function (message) {
        debugger;
        console.log("Netplay message received:", message);
    });

    // Hàm tạo hoặc tham gia phòng
    function createOrJoin() {
        if (playerId == '1') {
            openRoom(roomId);
        }
        else {
            joinRoom(roomId);
        }
        // if (!roomId) {
        //     console.error("Room ID is undefined or invalid.");
        //     return;
        // }

        // gameHub.invoke("CheckPresence", roomId)
        //     .then(function () {

        //     })
        //     .catch(function (err) {
        //         console.error("Error invoking CheckPresence:", err);
        //     });
    }

    // gameHub.on("check-presence-callback", function (roomExists, roomId, userCount) {
    //     debugger;
    //     if (roomExists) {

    //         console.log(`${userCount} user(s) in room ${roomId}, joining room...`);
    //         joinRoom(roomId);
    //     } else {
    //         console.log(`Room ${roomId} does not exist, opening...`);
    //         openRoom(roomId);
    //     }
    // });

    //  gameHub.on("open-room-callback", function (roomExists, roomId, userCount) {
    //     if (roomExists) {
    //         console.log(`${userCount} user(s) in room ${roomId}, joining room...`);
    //         joinRoom(roomId);
    //     } else {
    //         console.log(`Room ${roomId} does not exist, opening...`);
    //         openRoom(roomId);
    //     }
    // });
    gameHub.on("user-connected", function (roomId, data) {
        console.log(`Room ${roomId} user join`);
    });
        //user-connected
        // Hàm mở phòng
        function openRoom(roomId) {
            const roomData = {
                Id: roomId,
                SessionId: roomId,
                UserId: userId,
                Password: "", // Nếu cần mật khẩu, có thể thêm vào đây
                MaxParticipantsAllowed: 10, // Số người tối đa trong phòng
                CoreVer: 1, // Phiên bản Core
                Extra: {
                    Domain: "example.com",
                    GameId: parseInt(EJS_gameID),
                    RoomName: EJS_gameName
                }
            };

            gameHub.invoke("OpenRoom", roomData)
                .then(function () {
                    console.log(`Room ${roomId} opened successfully.`);
                    currentRoomId = roomId;
                    isRoomOwner = true;
                })
                .catch(function (err) {
                    console.error("Error opening room:", err);
                });
        }

        // Hàm tham gia phòng
        function joinRoom(roomId) {
            const joinData = {
                RoomId: roomId,
                SessionId: roomId,
                UserId: userId,
                Password: "", // Nếu cần mật khẩu, có thể thêm vào đây
                Extra: {
                    Domain: "example.com",
                    GameId: parseInt(EJS_gameID),
                    RoomName: EJS_gameName
                }
            };

            gameHub.invoke("JoinRoom", joinData)
                .then(function () {
                    console.log(`Joined room ${roomId} successfully.`);
                    currentRoomId = roomId;
                    isRoomOwner = false;
                })
                .catch(function (err) {
                    console.error("Error joining room:", err);
                });
        }

        // Hàm gửi tin nhắn Netplay
        function sendNetplayMessage(message) {
            if (!currentRoomId) {
                console.warn("You are not in a room.");
                return;
            }

            const netplayMessage = {
                Message: {
                    SenderId: userId,
                    Content: message,
                    Extra: {
                        GameName: EJS_gameName
                    }
                },
                Sender: userId,
                Extra: {
                    GameName: EJS_gameName
                }
            };

            gameHub.invoke("Netplay", currentRoomId, netplayMessage)
                .then(function () {
                    console.log("Netplay message sent:", message);
                })
                .catch(function (err) {
                    console.error("Error sending netplay message:", err);
                });
        }
</script>
